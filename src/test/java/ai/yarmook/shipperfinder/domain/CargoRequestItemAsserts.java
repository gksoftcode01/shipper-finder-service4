package ai.yarmook.shipperfinder.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CargoRequestItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoRequestItemAllPropertiesEquals(CargoRequestItem expected, CargoRequestItem actual) {
        assertCargoRequestItemAutoGeneratedPropertiesEquals(expected, actual);
        assertCargoRequestItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoRequestItemAllUpdatablePropertiesEquals(CargoRequestItem expected, CargoRequestItem actual) {
        assertCargoRequestItemUpdatableFieldsEquals(expected, actual);
        assertCargoRequestItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoRequestItemAutoGeneratedPropertiesEquals(CargoRequestItem expected, CargoRequestItem actual) {
        assertThat(actual)
            .as("Verify CargoRequestItem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoRequestItemUpdatableFieldsEquals(CargoRequestItem expected, CargoRequestItem actual) {
        assertThat(actual)
            .as("Verify CargoRequestItem relevant properties")
            .satisfies(a -> assertThat(a.getMaxQty()).as("check maxQty").isEqualTo(expected.getMaxQty()))
            .satisfies(a -> assertThat(a.getPhotoUrl()).as("check photoUrl").isEqualTo(expected.getPhotoUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoRequestItemUpdatableRelationshipsEquals(CargoRequestItem expected, CargoRequestItem actual) {
        assertThat(actual)
            .as("Verify CargoRequestItem relationships")
            .satisfies(a -> assertThat(a.getItem()).as("check item").isEqualTo(expected.getItem()))
            .satisfies(a -> assertThat(a.getUnit()).as("check unit").isEqualTo(expected.getUnit()))
            .satisfies(a -> assertThat(a.getTags()).as("check tags").isEqualTo(expected.getTags()))
            .satisfies(a -> assertThat(a.getCargoRequest()).as("check cargoRequest").isEqualTo(expected.getCargoRequest()));
    }
}
