package ai.yarmook.shipperfinder.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ItemTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemTypeAllPropertiesEquals(ItemType expected, ItemType actual) {
        assertItemTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertItemTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemTypeAllUpdatablePropertiesEquals(ItemType expected, ItemType actual) {
        assertItemTypeUpdatableFieldsEquals(expected, actual);
        assertItemTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemTypeAutoGeneratedPropertiesEquals(ItemType expected, ItemType actual) {
        assertThat(actual)
            .as("Verify ItemType auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemTypeUpdatableFieldsEquals(ItemType expected, ItemType actual) {
        assertThat(actual)
            .as("Verify ItemType relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getNameEn()).as("check nameEn").isEqualTo(expected.getNameEn()))
            .satisfies(a -> assertThat(a.getNameAr()).as("check nameAr").isEqualTo(expected.getNameAr()))
            .satisfies(a -> assertThat(a.getNameFr()).as("check nameFr").isEqualTo(expected.getNameFr()))
            .satisfies(a -> assertThat(a.getNameDe()).as("check nameDe").isEqualTo(expected.getNameDe()))
            .satisfies(a -> assertThat(a.getNameUrdu()).as("check nameUrdu").isEqualTo(expected.getNameUrdu()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItemTypeUpdatableRelationshipsEquals(ItemType expected, ItemType actual) {
        // empty method
    }
}
