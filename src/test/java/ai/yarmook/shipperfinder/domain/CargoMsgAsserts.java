package ai.yarmook.shipperfinder.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CargoMsgAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoMsgAllPropertiesEquals(CargoMsg expected, CargoMsg actual) {
        assertCargoMsgAutoGeneratedPropertiesEquals(expected, actual);
        assertCargoMsgAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoMsgAllUpdatablePropertiesEquals(CargoMsg expected, CargoMsg actual) {
        assertCargoMsgUpdatableFieldsEquals(expected, actual);
        assertCargoMsgUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoMsgAutoGeneratedPropertiesEquals(CargoMsg expected, CargoMsg actual) {
        assertThat(actual)
            .as("Verify CargoMsg auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoMsgUpdatableFieldsEquals(CargoMsg expected, CargoMsg actual) {
        assertThat(actual)
            .as("Verify CargoMsg relevant properties")
            .satisfies(a -> assertThat(a.getMsg()).as("check msg").isEqualTo(expected.getMsg()))
            .satisfies(a -> assertThat(a.getFromUserEncId()).as("check fromUserEncId").isEqualTo(expected.getFromUserEncId()))
            .satisfies(a -> assertThat(a.getToUserEncId()).as("check toUserEncId").isEqualTo(expected.getToUserEncId()))
            .satisfies(a -> assertThat(a.getCargoRequestId()).as("check cargoRequestId").isEqualTo(expected.getCargoRequestId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoMsgUpdatableRelationshipsEquals(CargoMsg expected, CargoMsg actual) {
        // empty method
    }
}
