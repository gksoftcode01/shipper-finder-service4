package ai.yarmook.shipperfinder.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ShowNumberHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShowNumberHistoryAllPropertiesEquals(ShowNumberHistory expected, ShowNumberHistory actual) {
        assertShowNumberHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertShowNumberHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShowNumberHistoryAllUpdatablePropertiesEquals(ShowNumberHistory expected, ShowNumberHistory actual) {
        assertShowNumberHistoryUpdatableFieldsEquals(expected, actual);
        assertShowNumberHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShowNumberHistoryAutoGeneratedPropertiesEquals(ShowNumberHistory expected, ShowNumberHistory actual) {
        assertThat(actual)
            .as("Verify ShowNumberHistory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShowNumberHistoryUpdatableFieldsEquals(ShowNumberHistory expected, ShowNumberHistory actual) {
        assertThat(actual)
            .as("Verify ShowNumberHistory relevant properties")
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()))
            .satisfies(a -> assertThat(a.getActionByEncId()).as("check actionByEncId").isEqualTo(expected.getActionByEncId()))
            .satisfies(a -> assertThat(a.getEntityType()).as("check entityType").isEqualTo(expected.getEntityType()))
            .satisfies(a -> assertThat(a.getEntityEncId()).as("check entityEncId").isEqualTo(expected.getEntityEncId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShowNumberHistoryUpdatableRelationshipsEquals(ShowNumberHistory expected, ShowNumberHistory actual) {
        // empty method
    }
}
